@*  Descripción: Vista, muestra la pantalla para el ingreso de nuevas opciones al analito.
    Author: Terceros.
    Fecha Creacion: 01/01/2017
    Fecha Modificación: 02/02/2017.
    Modificación: Se agregaron comentarios.*@
@model NetLab.Models.AnalitoOpcionViewModels


@using (Html.BeginForm("NuevaOpcion", "Analito", new { idAnalito = Model.Opcion.IdAnalito, IdOpcionParent = Model.Opcion.IdAnalitoOpcionParent }, FormMethod.Post, new { id = "frmNuevoOpcion" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Opcion.Glosa, new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Opcion.Glosa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opcion.Glosa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opcion.Orden, new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Opcion.Orden, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return isNumberKey(event)" } })
                @Html.ValidationMessageFor(model => model.Opcion.Orden, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Opcion.Tipo, new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.Opcion.Tipo, Model.TiposRespuesta.SelectList, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Opcion.Plataforma, "Plataforma", new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.Opcion.idPlataforma, Model.Opcion.listPlataformas, new { @id = "idPlataforma", @multiple = "multiple", @class = "form-control selListaPlataforma" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-3 col-md-6">
                @*<input type="submit" value="Crear" class="btn btn-primary" />*@
                <button type="submit" value="Crear" class="btn btn-primary"><span class="fa fa-floppy-o"></span> Crear</button>
                @*<button type="button" value="Regresar" id="btnCerrar" class="btn btn-default hidden"><span class="fa fa-angle-double-left"></span> Regresar</button>*@
            </div>
        </div>
    </div>
}
<div id="examenDialog">
</div>
<div>
    @Html.ActionLink("<< Volver a la lista", "Index", new { id = Model.Opcion.IdAnalito })
</div>
<script type="text/javascript">
    //$.validator.unobtrusive.parse("#frmNuevoOpcion");
    

    $(document).ready(function (e) {
        $('.selListaPlataforma').change(function () {
        }).multipleSelect({
            width: '100%',
            dropWidth: undefined,
            multiple: true,
            multipleWidth: 300
        });
    });
</script>