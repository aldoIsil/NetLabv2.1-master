@model Model.ExamenResultadoInterpretacion

@using (Html.BeginForm("CrearNuevaInterpretacion", "Analito", new { idAnalito = Model.idAnalito }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Glosa Padre", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GlosaParent, new { htmlAttributes = new { @class = "form-control input-sm ValidateLength lettersOnly" } })
                @Html.ValidationMessageFor(model => model.GlosaParent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Glosa Hijo", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Glosa, new { htmlAttributes = new { @class = "form-control input-sm ValidateLength lettersOnly" } })
                @Html.ValidationMessageFor(model => model.Glosa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Interpretacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Interpretacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Interpretacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" id="btnGuardar" class="btn btn-primary" />
            </div>
            <div style="padding-left:30px;">
                @Html.ActionLink(" Salir", "AnalitoInterpretacion", new { Model.idAnalito })
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

