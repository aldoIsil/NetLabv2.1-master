@*  Descripción: Vista, muestra la pantalla para el registro de un nuevo usuario.
    Author: Terceros.
    Fecha Creacion: 01/01/2017
    Fecha Modificación: 02/02/2017.
    Modificación: Se agregaron comentarios.*@
@model NetLab.Models.UsuarioViewModels

@using Model;

@{
    ViewBag.Title = "qqqqq";
}

@using (Html.BeginForm("NuevoUsuario2", "Usuario", new { ViewBag.page, ViewBag.search, ViewBag.dni }, FormMethod.Post, new { id = "formRegistrarUsuario", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        <h4>Usuario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="div-row">
                @Html.Label("DNI:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.TextBox("txtDni", (string)ViewBag.dni, new { id = "txtDniAgregar", @class = "form-control", maxlength = 8, onkeypress = "return isNumberKey(event)", onpaste = "return false" })
                    <div class="obligatorio">
                        <span>*</span>
                    </div>
                </div>

                <div class="col-lg-2">
                    @Html.ActionLink("Buscar", "ValidarPersona", new { ViewBag.page, ViewBag.dni }, new { @class = "btn btn-default btn-sm", id = "btnBuscarValidar" })



                    @*<a href="@Url.Action("Buscar", "ValidarPersona", new { ViewBag.page, ViewBag.dni})" class="btn btn-default btn-sm" id = "btnBuscarValidar">
                            <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                          Buscar
                        </a>*@


                </div>
            </div>
        </div>

        <div id="dvTblDatos">
            @Html.Partial("_PartialDatosUsuario", Model.Usuario)
        </div>

        <div class="form-group">
            <div class="div-row">
                @Html.Label("Login:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.Editor("login", new { htmlAttributes = new { @class = "form-control lettersOnly ValidateLength", id = "txtLoginAgregar" } })
                    <div class="obligatorio">
                        <span>*</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Usuario.login, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Colegiatura:", new { @class = "label-width2" })
                <div class="control-width2" style="display:flex">
                    @Html.Editor("codigoColegio", new { htmlAttributes = new { @class = "form-control ValidateLength simpleNumbersOnly" } })
                    @Html.ValidationMessageFor(model => model.Usuario.codigoColegio, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Profesión:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.DropDownList("profesion", Model.Profesion.SelectList, new { @class = "form-control cmbTipo", id = "cmbProfesion", name = "cmbProfesion" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="div-row">
                @Html.Label("Tiempo Caducidad(meses):", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.Editor("tiempoCaducidad", new { htmlAttributes = new { id = "txtTiempoCaducidadAgregar", @class = "form-control ValidateLength simpleNumbersOnly" } })
                    <div class="obligatorio">
                        <span>*</span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Usuario.tiempoCaducidad, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Correo:", new { @class = "label-width2" })
                <div class="control-width2" style="display:flex">
                    @Html.Editor("correo", new { htmlAttributes = new { @class = "form-control ValidateLength" } })
                    @Html.ValidationMessageFor(model => model.Usuario.correo, "", new { @class = "text-danger" })
                </div>

                @Html.Label("Cargo:", new { @class = "label-width3" })
                <div class="control-width3" style="display:flex">
                    @Html.Editor("cargo", new { htmlAttributes = new { @class = "form-control ValidateLength lettersOnly" } })
                    @Html.ValidationMessageFor(model => model.Usuario.cargo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="div-row">
                @Html.Label("RNE:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.Editor("rne", new { htmlAttributes = new { @class = "form-control ValidateLength simpleNumbersOnly" } })
                    @Html.ValidationMessageFor(model => model.Usuario.RNE, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Telefono:", new { @class = "label-width2" })
                <div class="control-width2" style="display:flex">
                    @Html.Editor("telefono", new { htmlAttributes = new { @class = "form-control ValidateLength simpleNumbersOnly" } })
                    @Html.ValidationMessageFor(model => model.Usuario.telefono, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Tipo:", new { @class = "label-width3" })
                <div class="control-width3" style="display:flex">
                    @(Model.tipoUsuarioLogeado == 3 ? Html.DropDownList("tipo", Model.TiposUsuario.SelectList, new { @class = "form-control cmbTipo", id = "cmbtipoUsuario", name = "cmbtipoUsuario", disabled = "disabled" }) : Html.DropDownList("tipo", Model.TiposUsuario.SelectList, new { @class = "form-control cmbTipo", id = "cmbtipoUsuario", name = "cmbtipoUsuario" }))
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="div-row">
                @Html.Label("Componente Usuario:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.DropDownList("componente", Model.Componente.SelectList, new { @class = "form-control cmbTipo", id = "cmbComponente", name = "cmbComponente" })
                </div>
                @Html.Label("Tipo Acceso:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.DropDownList("acceso", Model.Acceso.SelectList, new { @class = "form-control cmbTipo", id = "cmbAcceso", name = "cmbAcceso" })
                </div>
                @Html.Label("Nivel Aprobación:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.DropDownList("nAprobacion", Model.NivelAprobacion.SelectList, new { @class = "form-control cmbTipo", id = "cmbnAprobacion", name = "cmbnAprobacion" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            <div class="div-row">
                @Html.Label("Profesión:", new { @class = "label-width" })
                <div class="control-width" style="display:flex">
                    @Html.DropDownList("profesion", Model.Profesion.SelectList, new { @class = "form-control cmbTipo", id = "cmbProfesion", name = "cmbProfesion" })
                </div>
            </div>
        </div>*@

        @*<div id="EstablecimientoSolicitante" class="form-group">
                <div class="div-rowSol">
                    @Html.Label("Centro de Trabajo:", new { @class = "label-width" })
                    <div class="control-widthLong">
                        @Html.TextBox("CodigoUnico", "", new { @class = "form-control" })
                        @Html.Hidden("hddDato", (string)ViewBag.CodigoUnico)
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                <div class="div-row">
                    @Html.Label("Firma:", new { @class = "control-label col-md-1" })
                    <div class="col-md-7 divFileFirma" style="display:flex">
                        <input name="firmaU2" type="file" accept="image/png" id="firmaU"/>
                        <input name="imgFirma" type="hidden" />
                    </div>
                    <div class="col-md-7" style="display:flex">
                        <input type="file" onchange="previewFile()" id="ImageFirma"><br>
                        <img src="" height="200" alt="Image preview...">
                    </div>
                </div>
            </div>*@
        <div class="form-group">
            <div class="div-rowBTN">
                <div>
                    @*<input type="submit" id="btnCrearUsuario" value="Crear" class="btn btn-success" />*@


                    <button class="btn btn-primary" type="submit" id="btnCrearUsuario" value="Crear"><span class="fa fa-user-plus"></span> Crear</button>



                    @*<input id="btnVolverUsuarioAgregar" type="submit" value="Volver a la Lista" class="btn btn-default" />*@

                    <button class="btn btn-default" type="submit" id="btnVolverUsuarioAgregar" value="Volver a la Lista"><span class=" 	glyphicon glyphicon-menu-left"></span> Volver a la Lista</button>

                </div>

            </div>
        </div>

    </div>
}

<style type="text/css" media="all">
    .cmbDatos {
        width: 200px !important;
    }

    .txtDatos {
        width: 200px !important;
    }

    .cmbTipo {
        width: 200px !important;
    }

    /*.div-row {
        display: flex;
        padding-left: 10px;
        height: 25px;
        width: 780px;
    }*/


    .div-rowBTN {
        display: flex;
        padding-left: 10px;
        height: 25px;
        width: 750px;
    }

    .label-width {
        text-align: left;
        width: 140px;
    }

    .label-width2 {
        padding-left: 13px;
        text-align: left;
        width: 120px;
    }

    .label-width3 {
        padding-left: 10px;
        text-align: left;
        width: 80px;
    }

    .control-widthEL {
        width: 100px;
    }

    .control-width {
        width: 130px;
        display: flex;
    }

    .control-width2 {
        width: 140px;
        display: flex;
    }

    .control-width3 {
        width: 140px;
        display: flex;
    }

    .widthBtn1 {
        width: 90px;
    }

    .widthBtn2 {
        width: 210px;
    }

    #tabs {
        width: 780px;
        height: 280px !important;
    }


    .obligatorio {
        float: left;
    }

        .obligatorio span {
            color: red;
            margin-left: 4px;
            font-size: 12px;
            font-weight: bold;
        }
</style>

<script type="text/javascript">

    //function previewFile() {
    //    var preview = document.querySelector('img');
    //    var file = document.querySelector('input[type=file]').files[0];
    //    var reader = new FileReader();

    //    reader.onloadend = function () {
    //        preview.src = reader.result;
    //    }

    //    if (file) {
    //        reader.readAsDataURL(file);
    //    } else {
    //        preview.src = "";
    //    }
    //}
    $(function () {
        $(".lettersOnly").bind('keypress', function (e) {
            if (e.charCode === 32)
                return true;

            return OnlyLettersEvaluation(e.key);
        });
        $(".lettersOnly").bind('paste', function (event) {
            if (event.charCode === 32)
                return true;

            var newAdditionalValue = GetDataFromClipBoard(event);
            if (!OnlyLettersEvaluation(newAdditionalValue)) {
                event.preventDefault();
                return false;
            }
            return true;
        });
    });

    $(function () {
        $(".ValidateLength").bind('keypress', function (e) {
            return ValidateTextboxLength(e, '');
        });
        $(".ValidateLength").bind('paste', function (event) {
            var newAdditionalValue = GetDataFromClipBoard(event);

            if (!ValidateTextboxLength(event, newAdditionalValue)) {
                event.preventDefault();
            }
        });
    });

    function ValidateTextboxLength(event, newvalue) {
        if (EsCombinacionEspecial(event))
            return true;

        var controlId = event.target.id;
        var textbox = $.trim($('#' + controlId).val());
        var newTextValue = textbox + newvalue;

        var lengthToCompare;

        switch (controlId) {
            case "apellidoPaterno":
            case "apellidoMaterno":
                lengthToCompare = 20;
                break;
            case "cargo":
            case "nombres":
                lengthToCompare = 30;
                break;
            case "txtLoginAgregar":
            case "txtLoginEditar":
                lengthToCompare = 15;
                break;
            case "iniciales":
                lengthToCompare = 4;
                break;
            case "codigoColegio":
                lengthToCompare = 12;
                break;
            case "txtTiempoCaducidadAgregar":
            case "txtTiempoCaducidadEditar":
                lengthToCompare = 3;
                break;
            case "correo":
                lengthToCompare = 50;
                break;
            case "rne":
                lengthToCompare = 10;
                break;
            case "telefono":
                lengthToCompare = 9;
                break;
            default:
                lengthToCompare = 100;
        }

        if (textbox.length === lengthToCompare || newTextValue.length > lengthToCompare)
            return false;

        return true;
    }

    function EsCombinacionEspecial(event) {
        return event.charCode === 0 ||  //Esto es para firefox: delete,supr,arrow keys.
        (event.ctrlKey && event.key === "x") ||
        (event.ctrlKey && event.key === "c") ||
        (event.ctrlKey && event.key === "v");
    }

    $(function () {
        $(".simpleNumbersOnly").bind('keypress', function (e) {
            return ValidateNumbers(e.key);
        });
        $(".simpleNumbersOnly").bind('paste', function (event) {
            var newAdditionalValue = GetDataFromClipBoard(event);
            if (!ValidateNumbers(newAdditionalValue)) {
                event.preventDefault();
                return false;
            }
            return true;
        });
    });

    function ValidateNumbers(value) {
        if (value.match(/^[0-9]+$/) == null)
            return false;

        return true;
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}