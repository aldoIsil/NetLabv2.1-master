@model NetLab.Models.PEED.ResultadoPEEDViewModels
@using NetLab.Helpers
@{
    ViewBag.Title = "ResultadoControlCalidad";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/chosen.css">
<link rel="stylesheet" href="~/Scripts/jquery.alerts/jquery.alerts.css">
<link rel="stylesheet" href="~/Content/multiple-select.css" />

<link href="~/Content/dpLoading-2.x-min.css" rel="stylesheet" />
<link href="~/Content/dpLoading-2.x-skin-grey-min.css" rel="stylesheet" />
<script src="~/Scripts/dpLoading-2.x-min.js"></script>

<h2 ALIGN="center" class="text-primary">INGRESO DE RESULTADOS</h2>

<h3>Datos Panel</h3>
<hr />

@using (Html.BeginForm("Save", "ResultadoPEEC", FormMethod.Post, new { id = "frmResultadoPEEC" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.Panel.idConfigEvaluacion)
    @Html.HiddenFor(m => m.Panel.idConfiguracionPanel)
    @Html.HiddenFor(m => m.Panel.idTipo)
    @Html.HiddenFor(m => m.Materiales.FirstOrDefault().idConfigEvaluacionMaterial)
    @Html.HiddenFor(m => m.ResultadoControlCalidad.idEstablecimientoEvaluador)

    <fieldset class="form">
        <div class="div-row">
            <h4 class="col-md-6">Establecimiento Evaluador : @Model.ResultadoControlCalidad.EESSEvaluador.ToString().ToUpper()</h4>
            <h4 class="col-md-6">Panel : @Model.Panel.nombre.ToString().ToUpper()</h4>
        </div>
        <div class="div-row">
            <h4 class="col-md-6">Tipo Evalución: @Model.Panel.DescTipoEvaluacion.ToString().ToUpper()</h4>
            <h4 class="col-md-6">Método: @Model.Panel.DescTipo.ToString().ToUpper()</h4>
        </div>
        @*<div class="div-row">
            <h4>Tipo Evalución: @Model.Panel.idConfigEvaluacion</h4>
            <h4>Método: @Model.Panel.idConfiguracionPanel</h4>
            <h4>Método: @Model.Panel.idTipo</h4>
            <h4>Método: @Model.Materiales.FirstOrDefault().idConfigEvaluacionMaterial</h4>
            <h4>Método: @Model.ResultadoControlCalidad.idEstablecimientoEvaluador</h4>
                </div>*@
    </fieldset>
    <br />

    <div class="form-horizontal">
        <h3>Muestras</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.Hidden("idConfigEvaluacionHdd", Model.Panel.idConfigEvaluacion)
        @Html.Hidden("idConfiguracionPanelHdd",Model.Panel.idConfiguracionPanel)
        @Html.Hidden("idEstablecimientoEvaluadorHdd", Model.ResultadoControlCalidad.idEstablecimientoEvaluador)

        <div class="form-group">
            @Html.LabelFor(model => model.ResultadoControlCalidad.NroPregunta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ResultadoControlCalidad.NroPregunta, (List<SelectListItem>)ViewBag.ListaNroPregunta, new { @class = "form-control cmbxBusqueda" })
                @*@Html.EditorFor(model => model.ResultadoControlCalidad.NroPregunta, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.ResultadoControlCalidad.NroPregunta, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ResultadoControlCalidad.idTipoMetodo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ResultadoControlCalidad.idTipoMetodo, (List<SelectListItem>)ViewBag.ListTipoMetodoMaterial, new { @class = "form-control cmbxBusqueda" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ResultadoControlCalidad.Respuesta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ResultadoControlCalidad.Respuesta, (List<SelectListItem>)ViewBag.ListResultado, new { @class = "form-control cmbxBusqueda" })
            </div>
        </div>
        @*@if (@Model.Panel.idTipo == 3)
            {*@
        <div class="form-group">
            @Html.LabelFor(model => model.ResultadoControlCalidad.ValorRespuesta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ResultadoControlCalidad.ValorRespuesta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResultadoControlCalidad.ValorRespuesta, "", new { @class = "text-danger" })
            </div>
        </div>
        @*}*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnRegistrarResultado" name="btnRegistrarResultado" value="Add" class="btn btn-default" />
                <input type="button" value="Send" class="btn btn-default" />
            </div>
        </div>

        <h3>
            Resultados <a class="btn btn-default" id="btnRefresh" name="btnRefresh" href="#navigation-main" aria-label="Skip to main navigation">
                <i class="fa fa-refresh"></i>
            </a>
        </h3>
        <hr />        
    </div>
}
<div id="Resultados" class="table-responsive"></div>
<div>
    @Html.ActionLink("Regresar", "BusquedaEvaluacion")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.alerts/jquery.alerts.js")
    @Scripts.Render("~/Scripts/App/NetLab.js")
    @Scripts.Render("~/Scripts/App/PEED/IngresoResultados.js")
}
