@model Model.ConfiguracionMaterialControlCalidad


@{
    ViewBag.Title = "Configuración Material";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("EditarEvaluacionMaterial", "ConfiguracionEvalControlCalidad", new { ViewBag.page, ViewBag.search }, FormMethod.Post, new { id = "frmEditarMaterial" }))
{ 
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.idConfiguracionPanel)
    @Html.HiddenFor(m => m.idConfigEvaluacionMaterial)
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoMetodo, htmlAttributes: new { @class = "control-label col-lg-1" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.idTipoMetodo, (List<SelectListItem>)ViewBag.ListTipoMetodoMaterial, new { @class = "form-control cmbxBusqueda" })
                @*@Html.EditorFor(model => model.idTipoMetodo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idTipoMetodo, "", new { @class = "text-danger" })*@

            </div>
        </div>
        @*@<div class="form-group">
                @Html.LabelFor(model => model.idSubTipoMetodo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.idSubTipoMetodo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idSubTipoMetodo, "", new { @class = "text-danger" })
                    @Html.DropDownListFor(model => model.idSubTipoMetodo, (List<SelectListItem>)ViewBag.ListSubTipoMetodoMaterial, new { @class = "form-control cmbxBusqueda" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.nroPregunta, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.nroPregunta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nroPregunta, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.puntaje, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.puntaje, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.puntaje, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Respuesta, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @*@Html.EditorFor(model => model.Respuesta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Respuesta, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.Respuesta, (List<SelectListItem>)ViewBag.ListResultado, new { @class = "form-control cmbxBusqueda" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-1 col-md-2">
                <input type="button" id="btnEditarMaterial" name="btnEditarMaterial" value="Editar" class="btn btn-default" />
                @*<input type="button" id="btnCerrar" name="btnCerrar" value="Cerrar" class="btn btn-default" />*@
            </div>
        </div>
    </div>
}
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.setDefaults({ ignore: ":hidden:not(select)" });
        $.validator.unobtrusive.parse("#frmEditarMaterial");
    });
</script>