@model Model.ViewModels.CrearOrdenExamenVM

@{ 
    string time = string.Format("{0:HH:mm}", DateTime.Now);
}
<input type="hidden" id="hdntime" name="hdntime" value="@time" />
@*<div class="col-sm-offset-1">*@
<div style="clear:both;">
    <fieldset class="default">
        <legend class="default">
            <span>Agregar Examen</span>
        </legend>
        <div>
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.OrdenId)
            @*@Html.HiddenFor(model => model.TipoRegistro)*@
            @Html.Hidden("EnfermedadId")
            @Html.Hidden("ExamenId")
            @Html.Hidden("EstablecimientoDestinoId")
            <div class="row">
                <div class="col-xs-12 col-md-1">
                    @Html.Label("Enfermedad:")
                </div>
                <div class="col-xs-10 col-md-5">
                    <div class="row">
                        <div class="col-xs-10 col-md-10">
                            <input class="form-control autocomplete" id="enfermedad-au" name="enfermedad-au" placeholder="Seleccione la enfermedad" />
                        </div>
                        <div class="obligatorio col-xs-1 col-md-1">
                            <span>*</span>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-md-1">
                    @Html.Label("Examen:")
                </div>
                <div class="col-xs-10 col-md-5">
                    <div class="row">
                        <div class="col-xs-10 col-md-10">
                            <input class="form-control autocomplete" id="examen-au" name="examen-au" placeholder="Seleccione el examen" />
                        </div>
                        <div class="obligatorio col-xs-1 col-md-1">
                            <span>*</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-top:5px;">
                <div class="col-xs-12 col-md-1">
                    @Html.Label("EESS/LAB Destino:")
                </div>
                <div class="col-xs-10 col-md-7">
                    <div class="row">
                        <div class="col-xs-12 col-md-12">
                            <input class="form-control autocomplete" id="establecimientodestino-au" name="establecimientodestino-au" placeholder="Seleccione el Establecimiento de destino" />
                        </div>
                    </div>
                </div>
                <div class="col-xs-2 col-md-1">
                    <div class="obligatorio">
                        <span>*</span>
                    </div>
                </div>
            </div>
            <!--Tipo Muestra-->
            <div class="row" style="padding-top:5px;">
                <div class="col-xs-12 col-md-1">
                    @Html.Label("Tipo de Muestra:")
                </div>
                <div class="col-xs-12 col-md-5">
                    <div class="row">
                        <div id="divTipoMuestra" class="col-xs-10 col-md-10">
                            @Html.DropDownList("TipoMuestraId", new MultiSelectList(new List<Model.Entidades.TipoMuestra>(), "idTipoMuestra", "nombre"), new { value = "0", @class = "form-control sizeChosen oae-tipomuestra" })
                        </div>
                        <div class="obligatorio col-xs-1 col-md-1">
                            <span>*</span>
                        </div>
                    </div>
                </div>
                <!--Fecha Hora Coleccion-->
                <div class="col-xs-12 col-md-1">
                    @Html.Label("Fecha/Hora de Obtención:")
                </div>
                <div class="col-xs-12 col-md-1">
                    <input id="FechaObtencion" name="FechaObtencion" placeholder="dd/mm/yyyy" class="datepickerTelerik dateOnly form-control fechaObtencionMaxValue oae-fecha" autocomplete="off" />
                </div>
                <div class="col-xs-0 col-md-1"></div>
                <div class="col-xs-10 col-md-1">
                    <input type="time" id="HoraObtencion" name="HoraObtencion" placeholder="hh:mm" class="timepicker form-control" /> @*value="@string.Format("{0:HH:mm}", DateTime.Now)" />*@
                </div>
                <div class="col-xs-2 col-md-1">
                    <div class="obligatorio">
                        <span>*</span>
                    </div>
                </div>
                <div class="col-xs-0 col-md-1"></div>
            </div>
            <div class="alert alert-danger alerta-todos" role="alert" id="divErrores" style="display:none;">
            </div>
            <!--Botones-->
            <div class="row" style="padding-top:5px;">
                @*<div class="col-xs-12 col-md-10">
            <div class="row">*@

                <div class="col-sm-offset-2 col-xs-6 col-md-1">
                    <button id="btnAgregarExamen" class="btn btn-default btn-sm" style="text-align:center;"><span class="glyphicon glyphicon-ok "></span> Agregar</button>

                </div>
                <div class="col-sm-offset-2 col-xs-6 col-md-1">
                    <button type="button" value="cancelar" id="btnCancelar" class="btn btn-default btn-sm"><span class="glyphicon glyphicon-remove"></span> Cancelar</button>
                </div>
                @*</div>
            </div>*@
            </div>
        </div>
    </fieldset>
</div>

<div class="row" style="display:none;">
    <div id="dvPopupMaterial">
    </div>
</div>
@*<div>
    <a class="btn btn-default btn-sm text-center" href="@Url.Action("Index", "Catalogo")"
       type="submit"
       id="showCatalogo"
       style="color: blue;"
       target="_blank"><span class="glyphicon glyphicon-book"> Ver Catálogo</span></a>
</div>*@


<style type="text/css">
    /*.labelPopup {
        font-size: 12px;
        width: 140px;
        text-align: left;
    }*/



    .controlPopup {
        font-size: 12px;
        width: 90px;
        text-align: left;
    }

    .divRow {
        clear: both;
        height: 38px;
    }

    .formFecha {
        width: 120px;
    }

    .formHora {
        width: 40px;
    }

    .ui-autocomplete {
        max-height: 100px;
        overflow-y: auto;
        overflow-x: hidden;
        float: left;
        width: 300px;
    }

    #CodigoUnicoDestino.ui-autocomplete-loading {
        background-image: url('../../img/loading.gif');
        background-position: right center;
        background-repeat: no-repeat;
    }
</style>

<script type="text/javascript">
    $(function () {
        $("#btnCancelar").click(function (e) {
            CancelarAgregarExamen();
        });

        CargarAutocomplete();
        RevisarDatosObligatoriosAgregarExamen();
        $("#HoraObtencion").val($("#hdntime").val());
        $(".oae-tipomuestra").change(function (e) {
            RevisarDatosObligatoriosAgregarExamen();
        });

        $('input[type=time], .oae-fecha').change(function () {
            RevisarDatosObligatoriosAgregarExamen();
        });

        //$(".timepicker").trigger();
        //var element = document.getElementById('HoraObtencion');
        //var event = new Event('change');
        //element.dispatchEvent(event);
    });

    function RevisarDatosObligatoriosAgregarExamen() {
        $("#divErrores").hide();
        $("#divErrores").html("");
        var habilitarBotonAE = true;
        var nuevafecobt;
        $(".oae-fecha:not(.k-widget)").each( function (index, value) {
	        //console.log("index: ", index);
            //console.log("$(value).val(): ", $(value).val());
            if ($(value).val() == '') {
                //console.log("validacion fecha obligatorio");
                habilitarBotonAE = false;
            } else {
                nuevafecobt = $(value).val();
            }
        });

        if ($("#EnfermedadId").val() == "" || $("#EnfermedadId").val() == "0") {
            //console.log("validacion agregar examen - eess destino");
            habilitarBotonAE = false;
        }

        if ($("#ExamenId").val() == "" || $("#ExamenId").val() == "0") {
            //console.log("validacion agregar examen - examen");
            habilitarBotonAE = false;
        }

        if ($("#EstablecimientoDestinoId").val() == "" || $("#EstablecimientoDestinoId").val() == "0") {
            //console.log("validacion agregar examen - eess destino");
            habilitarBotonAE = false;
        }

        if ($("#TipoMuestraId").val() == "" || $("#TipoMuestraId").val() == "0") {
            //console.log("validacion tipomuestra");
            habilitarBotonAE = false;
        }

        //console.log("test hora: ", $("#HoraObtencion").val());
        if ($("#HoraObtencion").val() == "") {
            //console.log("algo esta mal");
            habilitarBotonAE = false;
        }

        if (nuevafecobt != undefined && nuevafecobt != "" && $("#HoraObtencion").val() != "") {
            var splt = nuevafecobt.split('/');
            var joined = splt[1] + '/' + splt[0] + '/' + splt[2];
            var nuevafechaobt = new Date(joined + ' ' + $("#HoraObtencion").val());
            //console.log("nuevafechaobt: ", nuevafechaobt);
            //console.log("new Date(): ", new Date());
            if (nuevafechaobt > new Date()) {
                habilitarBotonAE = false;
                $("#divErrores").append("<span>Fecha Obtención no puede ser mayor a Fecha Actual</span><br/>");
                $("#divErrores").show();
            }
        }

        if (habilitarBotonAE == true) {
            $("#btnAgregarExamen").removeAttr("disabled");
        } else {
            $("#btnAgregarExamen").prop("disabled", "disabled");
        }

        return habilitarBotonAE;
    }
</script>
